{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/emre/Projeler/cv/src/components/Typewriter.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { Typography, TypographyProps } from '@mui/material';\n\ninterface TypewriterProps extends Omit<TypographyProps, 'children'> {\n  texts: string[];\n  delay?: number;\n  typingDelay?: number;\n  pauseDelay?: number;\n}\n\nconst cursorKeyframes = `\n  @keyframes blink {\n    0%, 100% { opacity: 1; }\n    50% { opacity: 0; }\n  }\n`;\n\nconst getRandomDelay = (baseDelay: number) => {\n  return baseDelay + Math.random() * 100 - 50; // baseDelay ± 50ms\n};\n\nexport default function Typewriter({ texts, delay = 100, typingDelay = 100, pauseDelay = 2000, ...props }: TypewriterProps) {\n  const [displayText, setDisplayText] = useState('');\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [currentTextIndex, setCurrentTextIndex] = useState(0);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n\n  useEffect(() => {\n    const styleSheet = document.createElement('style');\n    styleSheet.textContent = cursorKeyframes;\n    document.head.appendChild(styleSheet);\n\n    return () => {\n      document.head.removeChild(styleSheet);\n    };\n  }, []);\n\n  const typeNextCharacter = useCallback(() => {\n    const currentText = texts[currentTextIndex];\n    setDisplayText((prev) => prev + currentText[currentIndex]);\n    setCurrentIndex((prev) => prev + 1);\n  }, [currentIndex, currentTextIndex, texts]);\n\n  const deleteCharacter = useCallback(() => {\n    setDisplayText((prev) => prev.slice(0, -1));\n  }, []);\n\n  useEffect(() => {\n    let timeout: NodeJS.Timeout;\n\n    if (isPaused) {\n      timeout = setTimeout(() => {\n        setIsPaused(false);\n        setIsDeleting(true);\n      }, pauseDelay);\n      return () => clearTimeout(timeout);\n    }\n\n    const currentText = texts[currentTextIndex];\n\n    if (isDeleting) {\n      if (displayText === '') {\n        setIsDeleting(false);\n        setCurrentTextIndex((prev) => (prev + 1) % texts.length);\n        return;\n      }\n\n      timeout = setTimeout(deleteCharacter, typingDelay / 3); // Silme hızını 3 kat daha hızlı yaptık\n    } else {\n      if (currentIndex === currentText.length) {\n        setIsPaused(true);\n        return;\n      }\n\n      timeout = setTimeout(typeNextCharacter, getRandomDelay(typingDelay));\n    }\n\n    return () => clearTimeout(timeout);\n  }, [currentIndex, currentTextIndex, displayText, isDeleting, isPaused, pauseDelay, texts, typingDelay, typeNextCharacter, deleteCharacter]);\n\n  useEffect(() => {\n    if (!isDeleting && displayText === '') {\n      setCurrentIndex(0);\n    }\n  }, [isDeleting, displayText]);\n\n  return (\n    <Typography {...props}>\n      {displayText}\n      &nbsp;\n      <span style={{\n        opacity: isPaused ? 0 : 1,\n        animation: 'blink 0.75s step-end infinite', // İmleç yanıp sönme hızını artırdık\n        color: '#81C9C9',\n        fontWeight: 'bold',\n        transform: 'scale(1.2)', // İmleci biraz daha büyük yaptık\n        display: 'inline-block'\n      }}>|</span>\n    </Typography>\n  );\n} "],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAYA,MAAM,kBAAkB,CAAC;;;;;AAKzB,CAAC;AAED,MAAM,iBAAiB,CAAC;IACtB,OAAO,YAAY,KAAK,MAAM,KAAK,MAAM,IAAI,mBAAmB;AAClE;AAEe,SAAS,WAAW,EAAE,KAAK,EAAE,QAAQ,GAAG,EAAE,cAAc,GAAG,EAAE,aAAa,IAAI,EAAE,GAAG,OAAwB;IACxH,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,aAAa,SAAS,aAAa,CAAC;QAC1C,WAAW,WAAW,GAAG;QACzB,SAAS,IAAI,CAAC,WAAW,CAAC;QAE1B,OAAO;YACL,SAAS,IAAI,CAAC,WAAW,CAAC;QAC5B;IACF,GAAG,EAAE;IAEL,MAAM,oBAAoB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QACpC,MAAM,cAAc,KAAK,CAAC,iBAAiB;QAC3C,eAAe,CAAC,OAAS,OAAO,WAAW,CAAC,aAAa;QACzD,gBAAgB,CAAC,OAAS,OAAO;IACnC,GAAG;QAAC;QAAc;QAAkB;KAAM;IAE1C,MAAM,kBAAkB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QAClC,eAAe,CAAC,OAAS,KAAK,KAAK,CAAC,GAAG,CAAC;IAC1C,GAAG,EAAE;IAEL,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI;QAEJ,IAAI,UAAU;YACZ,UAAU,WAAW;gBACnB,YAAY;gBACZ,cAAc;YAChB,GAAG;YACH,OAAO,IAAM,aAAa;QAC5B;QAEA,MAAM,cAAc,KAAK,CAAC,iBAAiB;QAE3C,IAAI,YAAY;YACd,IAAI,gBAAgB,IAAI;gBACtB,cAAc;gBACd,oBAAoB,CAAC,OAAS,CAAC,OAAO,CAAC,IAAI,MAAM,MAAM;gBACvD;YACF;YAEA,UAAU,WAAW,iBAAiB,cAAc,IAAI,uCAAuC;QACjG,OAAO;YACL,IAAI,iBAAiB,YAAY,MAAM,EAAE;gBACvC,YAAY;gBACZ;YACF;YAEA,UAAU,WAAW,mBAAmB,eAAe;QACzD;QAEA,OAAO,IAAM,aAAa;IAC5B,GAAG;QAAC;QAAc;QAAkB;QAAa;QAAY;QAAU;QAAY;QAAO;QAAa;QAAmB;KAAgB;IAE1I,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,cAAc,gBAAgB,IAAI;YACrC,gBAAgB;QAClB;IACF,GAAG;QAAC;QAAY;KAAY;IAE5B,qBACE,8OAAC,sMAAA,CAAA,aAAU;QAAE,GAAG,KAAK;;YAClB;YAAY;0BAEb,8OAAC;gBAAK,OAAO;oBACX,SAAS,WAAW,IAAI;oBACxB,WAAW;oBACX,OAAO;oBACP,YAAY;oBACZ,WAAW;oBACX,SAAS;gBACX;0BAAG;;;;;;;;;;;;AAGT"}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///Users/emre/Projeler/cv/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { Box, Grid, Typography, Card, CardContent, Chip, IconButton, Stack, Avatar } from '@mui/material';\nimport { GitHub, LinkedIn, Email, Code, Storage, Cloud, Psychology, Speed, Security, Circle } from '@mui/icons-material';\nimport { motion } from 'framer-motion';\nimport { useState, useEffect } from 'react';\nimport Typewriter from '@/components/Typewriter';\n\nconst MotionBox = motion(Box);\nconst MotionCard = motion(Card);\n\nconst calculateDuration = (startDate: Date, endDate: Date | undefined | null) => {\n  if (!endDate) return '';\n  \n  const start = new Date(startDate);\n  const end = new Date(endDate);\n  \n  // Son günü dahil etmek için bir gün ekliyoruz\n  end.setDate(end.getDate() + 1);\n  \n  let months = (end.getFullYear() - start.getFullYear()) * 12;\n  months += end.getMonth() - start.getMonth();\n  \n  // Gün bazında kontrol\n  if (end.getDate() < start.getDate()) {\n    months--;\n  }\n  \n  const years = Math.floor(months / 12);\n  const remainingMonths = months % 12;\n  \n  let duration = '';\n  if (years > 0) {\n    duration += `${years} yıl`;\n    if (remainingMonths > 0) duration += ` ${remainingMonths} ay`;\n  } else if (remainingMonths > 0) {\n    duration += `${remainingMonths} ay`;\n  }\n  \n  return duration;\n};\n\nconst formatDate = (date: Date | undefined | null) => {\n  if (!date) return '';\n  const months = ['Ocak', 'Şubat', 'Mart', 'Nisan', 'Mayıs', 'Haziran', 'Temmuz', 'Ağustos', 'Eylül', 'Ekim', 'Kasım', 'Aralık'];\n  return `${months[date.getMonth()]} ${date.getFullYear()}`;\n};\n\nconst skills = [\n  { name: 'Frontend', icon: <Code />, items: ['React', 'Next.js', 'TypeScript', 'Material UI'] },\n  { name: 'Backend', icon: <Storage />, items: ['Node.js', 'Python', 'PostgreSQL', 'MongoDB'] },\n  { name: 'DevOps', icon: <Cloud />, items: ['Docker', 'AWS', 'CI/CD', 'Kubernetes'] },\n];\n\ninterface Experience {\n  company: string;\n  title: string;\n  startDate: Date;\n  endDate?: Date;\n  isCurrentJob?: boolean;\n  location: string;\n  type: string;\n  logo: string;\n}\n\nconst staticExperiences: Experience[] = [\n  {\n    company: 'DGPays',\n    title: 'Senior Software Engineering',\n    startDate: new Date('2023-01-01'),\n    isCurrentJob: true,\n    location: 'Ataşehir, İstanbul, Türkiye',\n    type: 'Hibrit',\n    logo: '/dgpays.png',\n  },\n  {\n    company: 'OBSS',\n    title: 'Senior Software Consultant',\n    startDate: new Date('2022-01-01'),\n    endDate: new Date('2023-01-01'),\n    location: 'Ankara, Türkiye',\n    type: 'Hibrit',\n    logo: '/obss.webp',\n  },\n  {\n    company: 'StreamDelta',\n    title: 'Software Engineering',\n    startDate: new Date('2021-07-01'),\n    endDate: new Date('2021-12-31'),\n    location: 'İstanbul, Türkiye',\n    type: 'Uzaktan',\n    logo: '/streamDelta.jpeg',\n  },\n  {\n    company: 'Sikayetvar.com',\n    title: 'Software Engineering',\n    startDate: new Date('2018-09-01'),\n    endDate: new Date('2020-12-31'),\n    location: 'Ankara, Türkiye',\n    type: 'Ofisten',\n    logo: '/sikayetvar_logo.jpeg',\n  }\n];\n\nconst calculateTotalExperience = (experiences: Experience[]) => {\n  let totalMonths = 0;\n\n  experiences.forEach(exp => {\n    const start = new Date(exp.startDate);\n    const end = exp.isCurrentJob ? new Date() : new Date(exp.endDate!);\n    \n    // Son günü dahil etmek için bir gün ekliyoruz\n    end.setDate(end.getDate() + 1);\n    \n    let months = (end.getFullYear() - start.getFullYear()) * 12;\n    months += end.getMonth() - start.getMonth();\n    \n    // Gün bazında kontrol\n    if (end.getDate() < start.getDate()) {\n      months--;\n    }\n    \n    totalMonths += months;\n  });\n\n  const years = Math.floor(totalMonths / 12);\n  const remainingMonths = totalMonths % 12;\n\n  let duration = '';\n  if (years > 0) {\n    duration += `${years} yıl`;\n    if (remainingMonths > 0) duration += ` ${remainingMonths} ay`;\n  } else if (remainingMonths > 0) {\n    duration += `${remainingMonths} ay`;\n  }\n\n  return duration;\n};\n\nexport default function Home() {\n  const [currentDate, setCurrentDate] = useState<Date | null>(null);\n\n  useEffect(() => {\n    setCurrentDate(new Date());\n  }, []);\n\n  const experiences = staticExperiences.map(exp => ({\n    ...exp,\n    endDate: exp.isCurrentJob && currentDate ? currentDate : exp.endDate\n  }));\n\n  if (!currentDate) {\n    return null;\n  }\n\n  return (\n    <Box component=\"main\" sx={{ py: 4 }}>\n      <Grid container spacing={4}>\n        {/* Hero Section */}\n        <Grid item xs={12}>\n          <MotionBox\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n          >\n            <Stack direction={{ xs: 'column', md: 'row' }} spacing={6} alignItems=\"center\">\n              <Avatar\n                sx={{\n                  width: 300,\n                  height: 300,\n                  bgcolor: 'transparent'\n                }}\n                alt=\"Emre\"\n                src=\"/profile.png\"\n              />\n              <Box>\n                <Typography variant=\"h1\" gutterBottom>\n                  Merhaba, Ben Emre 👋\n                </Typography>\n                <Typewriter\n                  variant=\"h2\"\n                  color=\"primary\"\n                  gutterBottom\n                  texts={[\n                    \"Computer Engineer\",\n                    \"Full Stack Developer\",\n                    \"AI Researcher\"\n                  ]}\n                  typingDelay={150}\n                  pauseDelay={3000}\n                />\n                <Typography variant=\"body1\" paragraph sx={{ fontSize: '1.2rem', maxWidth: '800px', color: 'text.secondary' }}>\n                Küçüklüğümden beri meraklı olan kişiliğimi bir türlü dizginleyemedim. Kafama takılan şeyi araştırmak ve onu çözdükten sonraki mutluluk sanırım beni uzun yıllar bu mesleğe bağlayacak olan en büyük etken\n                </Typography>\n                <Stack direction=\"row\" spacing={2} sx={{ mb: 4 }}>\n                  <IconButton color=\"primary\" size=\"large\" sx={{ \n                    border: '2px solid',\n                    borderColor: 'primary.main',\n                    '&:hover': { \n                      backgroundColor: 'rgba(100, 255, 218, 0.1)',\n                      transform: 'translateY(-2px)',\n                      transition: 'all 0.2s ease-in-out'\n                    }\n                  }}>\n                    <GitHub />\n                  </IconButton>\n                  <IconButton color=\"primary\" size=\"large\" sx={{ \n                    border: '2px solid',\n                    borderColor: 'primary.main',\n                    '&:hover': { \n                      backgroundColor: 'rgba(100, 255, 218, 0.1)',\n                      transform: 'translateY(-2px)',\n                      transition: 'all 0.2s ease-in-out'\n                    }\n                  }}>\n                    <LinkedIn />\n                  </IconButton>\n                  <IconButton color=\"primary\" size=\"large\" sx={{ \n                    border: '2px solid',\n                    borderColor: 'primary.main',\n                    '&:hover': { \n                      backgroundColor: 'rgba(100, 255, 218, 0.1)',\n                      transform: 'translateY(-2px)',\n                      transition: 'all 0.2s ease-in-out'\n                    }\n                  }}>\n                    <Email />\n                  </IconButton>\n                </Stack>\n              </Box>\n            </Stack>\n          </MotionBox>\n        </Grid>\n\n        {/* Experience Section */}\n        <Grid item xs={12}>\n          <Box sx={{ mt: 4 }}>\n            <Typography variant=\"h3\" gutterBottom sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 6 }}>\n              <Speed sx={{ color: 'primary.main' }} /> \n              Deneyim \n              <Typography \n                component=\"span\" \n                variant=\"h6\" \n                sx={{ \n                  ml: 2,\n                  color: 'primary.main',\n                  opacity: 0.8,\n                  fontStyle: 'italic'\n                }}\n              >\n                ({calculateTotalExperience(experiences)})\n              </Typography>\n            </Typography>\n            <Box sx={{ \n              position: 'relative',\n              '&::before': {\n                content: '\"\"',\n                position: 'absolute',\n                left: '20px',\n                width: '2px',\n                height: '100%',\n                background: 'linear-gradient(180deg, #81C9C9 0%, rgba(129, 201, 201, 0.2) 100%)',\n              }\n            }}>\n              <Stack spacing={6}>\n                {/* DGPays */}\n                <Box sx={{ \n                  display: 'flex', \n                  alignItems: 'flex-start',\n                  position: 'relative',\n                  gap: 3\n                }}>\n                  <Avatar\n                    src=\"/dgpays.png\"\n                    alt=\"DGPays\"\n                    sx={{\n                      width: 100,\n                      height: 100,\n                      position: 'absolute',\n                      left: -30,\n                      top: 10,\n                      bgcolor: 'transparent',\n                      border: '2px solid',\n                      borderColor: 'primary.main',\n                      zIndex: 1,\n                      '& img': {\n                        objectFit: 'cover',\n                        borderRadius: '50%'\n                      }\n                    }}\n                  />\n                  <Card sx={{ \n                    flex: 1,\n                    ml: 12,\n                    background: 'rgba(36, 36, 36, 0.5)',\n                  }}>\n                    <CardContent>\n                      <Typography variant=\"h6\" gutterBottom>\n                        Senior Software Engineering\n                      </Typography>\n                      <Typography variant=\"subtitle1\" color=\"primary\">\n                        {experiences[0].company} • {formatDate(experiences[0].startDate)} - {experiences[0].endDate === currentDate ? 'Günümüz' : formatDate(experiences[0].endDate)} ({calculateDuration(experiences[0].startDate, experiences[0].endDate)})\n                      </Typography>\n                      <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary', mb: 1 }}>\n                        {experiences[0].location} • {experiences[0].type}\n                      </Typography>\n                      <Typography variant=\"body1\" sx={{ color: 'text.secondary' }}>\n                        • C# ve .NET Core kullanarak API'ler geliştirdim<br />\n                        • JavaScript ve DevExtreme ile kullanıcı arayüzleri oluşturdum<br />\n                        • Ödeme kolaylaştırıcı entegrasyonu, kampanya modülü ve doğrudan operatör faturalandırma (DCB) modülü gibi çeşitli projelerde çalıştım<br />\n                        • MSSQL ile veritabanı yönetimi yaptım<br />\n                        • Agile Scrum metodolojisini takip ettim, görev ve proje yönetimi için JIRA kullandım\n                      </Typography>\n                      <Stack direction=\"row\" spacing={1} sx={{ mt: 1 }}>\n                        <Chip size=\"small\" label=\"Jenkins\" variant=\"outlined\" />\n                        <Chip size=\"small\" label=\"CI/CD\" variant=\"outlined\" />\n                        <Chip size=\"small\" label=\"PL/SQL\" variant=\"outlined\" />\n                        <Chip size=\"small\" label=\"JavaScript\" variant=\"outlined\" />\n                        <Chip size=\"small\" label=\"GitLab\" variant=\"outlined\" />\n                      </Stack>\n                    </CardContent>\n                  </Card>\n                </Box>\n\n                {/* OBSS */}\n                <Box sx={{ \n                  display: 'flex', \n                  alignItems: 'flex-start',\n                  position: 'relative',\n                  gap: 3\n                }}>\n                  <Avatar\n                    src=\"/obss.webp\"\n                    alt=\"OBSS\"\n                    sx={{\n                      width: 100,\n                      height: 100,\n                      position: 'absolute',\n                      left: -30,\n                      top: 10,\n                      bgcolor: 'transparent',\n                      border: '2px solid',\n                      borderColor: 'primary.main',\n                      zIndex: 1,\n                      '& img': {\n                        objectFit: 'cover',\n                        borderRadius: '50%'\n                      }\n                    }}\n                  />\n                  <Card sx={{ \n                    flex: 1,\n                    ml: 12,\n                    background: 'rgba(36, 36, 36, 0.5)',\n                  }}>\n                    <CardContent>\n                      <Typography variant=\"h6\" gutterBottom>\n                        Senior Software Consultant\n                      </Typography>\n                      <Typography variant=\"subtitle1\" color=\"primary\">\n                        {experiences[1].company} • {formatDate(experiences[1].startDate)} - {formatDate(experiences[1].endDate)} ({calculateDuration(experiences[1].startDate, experiences[1].endDate)})\n                      </Typography>\n                      <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary', mb: 1 }}>\n                        {experiences[1].location} • {experiences[1].type}\n                      </Typography>\n                      <Typography variant=\"body1\" sx={{ color: 'text.secondary' }}>\n                        • Aselsan'da dış kaynaklı Kıdemli Yazılım Danışmanı olarak çalıştım<br />\n                        • Java 8+, Spring ve Hibernate kullanarak mikroservisler geliştirdim<br />\n                        • Kafka kullanarak servisler arası event-driven iletişimi uyguladım<br />\n                        • React kullanarak single-page uygulamalar geliştirdim<br />\n                        • PostgreSQL ile veritabanı yönetimi yaptım<br />\n                        • Servisleri Kubernetes'e deploy ettim\n                      </Typography>\n                      <Stack direction=\"row\" spacing={1} sx={{ mt: 1 }}>\n                        <Chip size=\"small\" label=\"Java\" variant=\"outlined\" />\n                        <Chip size=\"small\" label=\"Spring\" variant=\"outlined\" />\n                        <Chip size=\"small\" label=\"React\" variant=\"outlined\" />\n                        <Chip size=\"small\" label=\"Kubernetes\" variant=\"outlined\" />\n                        <Chip size=\"small\" label=\"Kafka\" variant=\"outlined\" />\n                      </Stack>\n                    </CardContent>\n                  </Card>\n                </Box>\n\n                {/* StreamDelta */}\n                <Box sx={{ \n                  display: 'flex', \n                  alignItems: 'flex-start',\n                  position: 'relative',\n                  gap: 3\n                }}>\n                  <Avatar\n                    src=\"/streamDelta.jpeg\"\n                    alt=\"StreamDelta\"\n                    sx={{\n                      width: 100,\n                      height: 100,\n                      position: 'absolute',\n                      left: -30,\n                      top: 10,\n                      bgcolor: 'transparent',\n                      border: '2px solid',\n                      borderColor: 'primary.main',\n                      zIndex: 1,\n                      '& img': {\n                        objectFit: 'cover',\n                        borderRadius: '50%'\n                      }\n                    }}\n                  />\n                  <Card sx={{ \n                    flex: 1,\n                    ml: 12,\n                    background: 'rgba(36, 36, 36, 0.5)',\n                  }}>\n                    <CardContent>\n                      <Typography variant=\"h6\" gutterBottom>\n                        Software Engineering\n                      </Typography>\n                      <Typography variant=\"subtitle1\" color=\"primary\">\n                        {experiences[2].company} • {formatDate(experiences[2].startDate)} - {formatDate(experiences[2].endDate)} ({calculateDuration(experiences[2].startDate, experiences[2].endDate)})\n                      </Typography>\n                      <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary', mb: 1 }}>\n                        {experiences[2].location} • {experiences[2].type}\n                      </Typography>\n                      <Typography variant=\"body1\" sx={{ color: 'text.secondary' }}>\n                        • Vodafone projelerinde dış kaynaklı geliştirici olarak çalıştım<br />\n                        • Java, Spring Boot ve Hibernate kullanarak mikroservisler geliştirdim<br />\n                        • Camunda ve BPMN 2.0 notasyonu kullanarak İş Yönetimi Mikroservisinden sorumlu oldum<br />\n                        • Oracle DB, MongoDB ve Redis ile veri depolama ve önbellekleme yaptım<br />\n                        • Jenkins kullanarak mikroservisleri OpenShift'e deploy ettim\n                      </Typography>\n                      <Stack direction=\"row\" spacing={1} sx={{ mt: 1 }}>\n                        <Chip size=\"small\" label=\"Java\" variant=\"outlined\" />\n                        <Chip size=\"small\" label=\"Spring Boot\" variant=\"outlined\" />\n                        <Chip size=\"small\" label=\"Camunda\" variant=\"outlined\" />\n                        <Chip size=\"small\" label=\"MongoDB\" variant=\"outlined\" />\n                        <Chip size=\"small\" label=\"Redis\" variant=\"outlined\" />\n                      </Stack>\n                    </CardContent>\n                  </Card>\n                </Box>\n\n                {/* Sikayetvar */}\n                <Box sx={{ \n                  display: 'flex', \n                  alignItems: 'flex-start',\n                  position: 'relative',\n                  gap: 3\n                }}>\n                  <Avatar\n                    src=\"/sikayetvar_logo.jpeg\"\n                    alt=\"Sikayetvar\"\n                    sx={{\n                      width: 100,\n                      height: 100,\n                      position: 'absolute',\n                      left: -30,\n                      top: 10,\n                      bgcolor: 'transparent',\n                      border: '2px solid',\n                      borderColor: 'primary.main',\n                      zIndex: 1,\n                      '& img': {\n                        objectFit: 'cover',\n                        borderRadius: '50%'\n                      }\n                    }}\n                  />\n                  <Card sx={{ \n                    flex: 1,\n                    ml: 12,\n                    background: 'rgba(36, 36, 36, 0.5)',\n                  }}>\n                    <CardContent>\n                      <Typography variant=\"h6\" gutterBottom>\n                        Software Engineering\n                      </Typography>\n                      <Typography variant=\"subtitle1\" color=\"primary\">\n                        {experiences[3].company} • {formatDate(experiences[3].startDate)} - {formatDate(experiences[3].endDate)} ({calculateDuration(experiences[3].startDate, experiences[3].endDate)})\n                      </Typography>\n                      <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary', mb: 1 }}>\n                        {experiences[3].location} • {experiences[3].type}\n                      </Typography>\n                      <Typography variant=\"body1\" sx={{ color: 'text.secondary' }}>\n                        • Java ve Spring Boot kullanarak mikroservisler geliştirdim<br />\n                        • Şikayetvar'ın altyapısını yeniden geliştirme projesine katıldım<br />\n                        • Elasticsearch kullanarak otomatik tamamlama mikroservisi geliştirdim<br />\n                        • RESTful iletişim ile servisler geliştirdim<br />\n                        • MySQL ile veritabanı yönetimi yaptım<br />\n                        • Jenkins kullanarak mikroservisleri Google Cloud'a deploy ettim\n                      </Typography>\n                      <Stack direction=\"row\" spacing={1} sx={{ mt: 1 }}>\n                        <Chip size=\"small\" label=\"Java\" variant=\"outlined\" />\n                        <Chip size=\"small\" label=\"Spring Boot\" variant=\"outlined\" />\n                        <Chip size=\"small\" label=\"Elasticsearch\" variant=\"outlined\" />\n                        <Chip size=\"small\" label=\"MySQL\" variant=\"outlined\" />\n                        <Chip size=\"small\" label=\"Google Cloud\" variant=\"outlined\" />\n                      </Stack>\n                    </CardContent>\n                  </Card>\n                </Box>\n              </Stack>\n            </Box>\n          </Box>\n        </Grid>\n\n        {/* Skills Section */}\n        <Grid item xs={12}>\n          <MotionCard\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8, delay: 0.2 }}\n          >\n            <CardContent>\n              <Typography variant=\"h3\" gutterBottom sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                <Psychology sx={{ color: 'primary.main' }} /> Yetenekler\n              </Typography>\n              <Grid container spacing={3}>\n                {skills.map((category, index) => (\n                  <Grid item xs={12} md={4} key={category.name}>\n                    <Card sx={{ height: '100%', background: 'rgba(36, 36, 36, 0.5)' }}>\n                      <CardContent>\n                        <Typography variant=\"h6\" gutterBottom sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                          {category.icon} {category.name}\n                        </Typography>\n                        <Stack direction=\"row\" spacing={1} flexWrap=\"wrap\" gap={1}>\n                          {category.items.map((skill) => (\n                            <Chip\n                              key={skill}\n                              label={skill}\n                              color=\"primary\"\n                              variant=\"outlined\"\n                              sx={{ m: 0.5 }}\n                            />\n                          ))}\n                        </Stack>\n                      </CardContent>\n                    </Card>\n                  </Grid>\n                ))}\n              </Grid>\n            </CardContent>\n          </MotionCard>\n        </Grid>\n\n        {/* Projects Section */}\n        <Grid item xs={12}>\n          <MotionCard\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8, delay: 0.6 }}\n          >\n            <CardContent>\n              <Typography variant=\"h3\" gutterBottom sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                <Security sx={{ color: 'primary.main' }} /> Projeler\n              </Typography>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Card variant=\"outlined\" sx={{ height: '100%', background: 'rgba(36, 36, 36, 0.5)' }}>\n                    <CardContent>\n                      <Typography variant=\"h6\" gutterBottom sx={{ color: 'primary.main' }}>\n                        E-Ticaret Platformu\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Next.js, TypeScript ve MongoDB kullanarak geliştirilen modern bir e-ticaret çözümü\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Card variant=\"outlined\" sx={{ height: '100%', background: 'rgba(36, 36, 36, 0.5)' }}>\n                    <CardContent>\n                      <Typography variant=\"h6\" gutterBottom sx={{ color: 'primary.main' }}>\n                        AI Chatbot\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Python ve TensorFlow kullanarak geliştirilen yapay zeka destekli müşteri hizmetleri chatbotu\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </MotionCard>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1711, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}